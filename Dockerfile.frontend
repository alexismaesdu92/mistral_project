# ========================================
# Dockerfile pour le frontend Mistral Chatbot
# ========================================
# 
# Ce Dockerfile utilise un build multi-stage :
# 1. Stage de build : Compile l'application React
# 2. Stage de production : Sert l'application avec nginx

# ========================================
# STAGE 1: Build de l'application React
# ========================================
FROM node:18-alpine AS build

# Métadonnées
LABEL stage=build
LABEL description="Build stage pour l'application React"

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers de configuration npm
COPY front_end/package*.json ./

# Installer les dépendances (utilise le cache Docker si package.json n'a pas changé)
RUN npm ci --only=production --silent

# Copier le code source
COPY front_end/ ./

# Build de l'application pour la production
RUN npm run build

# ========================================
# STAGE 2: Production avec nginx
# ========================================
FROM nginx:alpine

# Métadonnées
LABEL maintainer="Alexis Maes <alexismaes1@gmail.com>"
LABEL description="Frontend React pour Mistral Chatbot servi par nginx"
LABEL version="0.1.0"

# Installer curl pour les health checks
RUN apk add --no-cache curl

# Copier la configuration nginx personnalisée
COPY nginx.conf /etc/nginx/nginx.conf

# Copier les fichiers buildés depuis le stage de build
COPY --from=build /app/build /usr/share/nginx/html

# Ajuster les permissions pour l'utilisateur nginx existant
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Créer les répertoires nécessaires avec les bonnes permissions
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Exposer le port
EXPOSE 3000

# Health check pour vérifier que nginx fonctionne
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Utiliser l'utilisateur non-root
USER nginx

# Démarrer nginx
CMD ["nginx", "-g", "daemon off;"]
